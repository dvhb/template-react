/* tslint:disable */
/* eslint-disable */
/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.5
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IOrder
 */
export interface IOrder {
    /**
     * 
     * @type {number}
     * @memberof IOrder
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof IOrder
     */
    petId?: number;
    /**
     * 
     * @type {number}
     * @memberof IOrder
     */
    quantity?: number;
    /**
     * 
     * @type {Date}
     * @memberof IOrder
     */
    shipDate?: Date;
    /**
     * Order Status
     * @type {string}
     * @memberof IOrder
     */
    status?: IOrderStatusEnum;
    /**
     * 
     * @type {boolean}
     * @memberof IOrder
     */
    complete?: boolean;
}

/**
* @export
* @enum {string}
*/
export enum IOrderStatusEnum {
    Placed = 'placed',
    Approved = 'approved',
    Delivered = 'delivered'
}

export function IOrderFromJSON(json: any): IOrder {
    return IOrderFromJSONTyped(json, false);
}

export function IOrderFromJSONTyped(json: any, ignoreDiscriminator: boolean): IOrder {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'petId': !exists(json, 'petId') ? undefined : json['petId'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'shipDate': !exists(json, 'shipDate') ? undefined : (new Date(json['shipDate'])),
        'status': !exists(json, 'status') ? undefined : json['status'],
        'complete': !exists(json, 'complete') ? undefined : json['complete'],
    };
}

export function IOrderToJSON(value?: IOrder | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'petId': value.petId,
        'quantity': value.quantity,
        'shipDate': value.shipDate === undefined ? undefined : (value.shipDate.toISOString()),
        'status': value.status,
        'complete': value.complete,
    };
}


